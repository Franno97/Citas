{
  "App": {
    "CorsOrigins": "https://*.Appointment.com,http://172.31.2.23,http://172.31.2.24"
  },
  "ConnectionStrings": {
    //"Default": "Server=172.31.3.34;Database=Mre.Sb.Base;User Id=sa;Password=2xUWheya$kR7ZBJew*a5",
    //"AbpAuditLogging": "Server=172.31.3.34;Database=Mre.Sb.Base.Auditoria;User Id=sa;Password=2xUWheya$kR7ZBJew*a5",
    "Appointment": "Server=172.31.2.30;Database=Mre.Sb.Citas;User Id=visas;Password=2xUWheya$kR7ZBJew*a5"
  },

  "Redis": {
    "Configuration": "172.31.2.29"
  },
  "AuthServer": {
    "Authority": "http://172.31.2.25:85",
    "RequireHttpsMetadata": "false",
    "SwaggerClientId": "Cita_Swagger",
    "SwaggerClientSecret": "1q2w3e*",
    "Audience": "Cita",
    "Scopes": [ "Cita" ]
  },
  "Autorizacion": {
    //Tiempo cache para guardar los permisos/usuario. (Segundos)
    "CacheTiempo": 360
  },
  "Auditoria": {
    //Nombre de la aplicacion o microservicio que se registra como un campo en los registros de auditoria
    "AplicacionNombre": "Citas",
    //Codigo de categoria para obtener la configuracion de auditoria
    "ConfiguracionCategoriaCodigo": "BCIT",
    //Tiempo cache para la configuracion auditoria. (Segundos)
    "CacheTiempo": 86400,
    //Nombre claim para obtener el usuario desde Identidad tipo "ClaimsIdentity"
    "ClaimUsuario": "preferred_username",
    //Configuracion de la conexion, del almacenamiento auditoria. (Proveedor: ElasticSearch Conexion)
    "AlmacenamientoConexion": "http://172.31.2.28:9200",
    //Nombre grupo. Para agrupamiento de los registros auditoria en el almacenamiento. (Proveedor: ElasticSearch indice debe ser minusculas)
    "AlmacenamientoGrupo": "auditoria"
  },
  //Configuracion Cache
  "Cache": {
    "KeyPrefix": "Citas:"
  },
  //Configuracion clientes para generacion token, consumir Servicios remotos
  "IdentityClients": {
    //Default, si no existe el nombre cliente especifico, se trabaja con el cliente default
    "Default": {
      //"client_credentials" or "password".
      "GrantType": "password",
      "ClientId": "MicroserviceComunication_App",
      "ClientSecret": "1q2w3e*",
      "UserName": "admin",
      "UserPassword": "1q2w3E*",
      "Authority": "http://172.31.2.25:85/",
      "Scope": "Base Notificacion",
      "RequireHttps": "false"
    }
  },
  //Configuracion de servicios externos "Remotos"
  "RemoteServices": {
    "Base": {
      "BaseUrl": "http://172.31.2.25:83/"
    },
    //Api configuracion auditoria.
    "AuditarConf": {
      "BaseUrl": "http://172.31.2.25:83/"
    },
    //Api para obtener permisos usuario autentificado
    "Permisos": {
      "BaseUrl": "http://172.31.2.25:83/"
    }
  },
  //Configuracion eventos distribuidos. General
  "EventosDistribuidos": {
    //En milesegundos
    "IntervaloTiempo": 3000,
    "NumeroReintentos": 3
  },
  //Configuracion eventos distribuidos, utilizando kafka.
  "Kafka": {
    "Connections": {
      "Default": {
        "BootstrapServers": "172.31.3.44:9092",
        "SocketTimeoutMs": 60000
      }
    },
    "EventBus": {
      "GroupId": "Mre.Sb.Citas",
      "TopicName": "Mre.Sb.Base"
    }
  },
  //Configuraciones de elastic
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Warning",
      "Microsoft.Hosting.Lifetime": "Information"
    }
  },
  //Configuraciones de logs
  "Serilog": {
    "Using": [
      "Serilog.Sinks.Console",
      "Serilog.Sinks.File",
      "Serilog.Sinks.Async",
      "Serilog.Sinks.Elasticsearch",
      "Serilog.Enrichers.Environment",
      "Mre.Sb.Logs"
    ],
    "MinimumLevel": {
      "Default": "Debug"
      //"Override": {
      //  "Microsoft": "Warning"
      //}
    },
    "Enrich": [
      //https://github.com/serilog/serilog-enrichers-environment
      "WithMachineName",
      "WithEnvironmentName",
      "WithEnvironmentUserName",
      {
        "Name": "ConUsuario",
        "Args": {
          //Nombre claim, que se utiliza para obtener el usuario
          "usuarioClaim": "preferred_username",
          //Nombre campo, que se registra en los logs, el nombre del usuario
          "usuarioPropiedadNombre": "UserName"
        }
      }
    ],
    "WriteTo": [
      //{
      //  "Name": "Async",
      //  "Args": {
      //    "configure": [
      //      {
      //        "Name": "Console"
      //      }
      //    ]
      //  }
      //},
      {
        "Name": "Async",
        "Args": {
          "configure": [
            {
              "Name": "File",
              "Args": {
                "path": "logs/log-.txt",
                "rollingInterval": "Day",
                "retainedFileCountLimit": 30,
                "shared": true,
                "rollOnFileSizeLimit": true
                //"formatter": "Serilog.Formatting.Compact.CompactJsonFormatter, Serilog.Formatting.Compact"
              }
            }
          ]
        }
      },
      {
        "Name": "Elasticsearch",
        //Opciones: https://github.com/serilog-contrib/serilog-sinks-elasticsearch/wiki/Configure-the-sink
        "Args": {
          "nodeUris": "http://172.31.2.28:9200",
          "indexFormat": "logs_citas_{0:yyyy.MM.dd}",
          "autoRegisterTemplate": true,
          //"minimumLogEventLevel": "Information",
          "batchAction": "Create",
          //When true fields will be written at the root of the json document.
          "inlineFields": true
        }
      }
    ],
    "Properties": {
      "ApplicationName": "Citas"
    }
  }
}